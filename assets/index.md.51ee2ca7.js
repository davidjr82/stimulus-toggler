import{_ as s,c as a,o as t,a as e}from"./app.43137063.js";const F=JSON.parse('{"title":"What is Stimulus Toggler?","description":"","frontmatter":{},"headers":[],"relativePath":"index.md"}'),o={name:"index.md"},n=e(`<h1 id="what-is-stimulus-toggler" tabindex="-1">What is Stimulus Toggler? <a class="header-anchor" href="#what-is-stimulus-toggler" aria-hidden="true">#</a></h1><p>It is a <a href="https://stimulus.hotwired.dev/" target="_blank" rel="noreferrer">Hotwired Stimulus</a> controller used to toggle classes of the DOM elements.</p><h2 id="how-it-works" tabindex="-1">How it works? <a class="header-anchor" href="#how-it-works" aria-hidden="true">#</a></h2><p>The controller set variables to on/off when an element triggers the action with<br><code>data-action=&quot;toggler#states&quot;</code>.</p><p>The values that action want to set for the variables are defined by<br><code>data-toggler-states</code>.</p><p>If only <code>data-toggler-states</code> is set in an element, the controller will attach the action automatically so you don&#39;t have to take care of it. <a href="/stimulus-toggler/alias">See Automatic aliasing section</a>.</p><h2 id="setting-variables" tabindex="-1">Setting variables <a class="header-anchor" href="#setting-variables" aria-hidden="true">#</a></h2><p>Using the token <code>+</code> before a variable, will set it to <strong>on</strong>.<br> Using the token <code>-</code> before a variable, will set it to <strong>off</strong>.<br> Without any token, it <strong>toggles</strong> the variable.</p><p><strong>Examples:</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">&lt;!-- Clicking here, it will... --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-toggler-states</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">-sidebar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...set &quot;sidebar&quot; to off</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-toggler-states</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">+sidebar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...set &quot;sidebar&quot; to on</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">data-toggler-states</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sidebar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">...toggle &quot;sidebar&quot; on/off</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="reacting-to-variable-changes" tabindex="-1">Reacting to variable changes <a class="header-anchor" href="#reacting-to-variable-changes" aria-hidden="true">#</a></h2><p>Using the mutation observer provided by Stimulus, as soon as a variable changes, other elements react to it adding, removing or toggling their classes accordingly.</p><p><strong>Examples:</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki"><code><span class="line"><span style="color:#676E95;">&lt;!-- We listen to the variable sidebar, by default the class to toggle is \`hidden\` --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">data-toggler-target</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">toggleable</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">data-toggler-listen</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">sidebar</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        This is my fancy sidebar</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="other-rules" tabindex="-1">Other rules <a class="header-anchor" href="#other-rules" aria-hidden="true">#</a></h2><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Variables names only allows alphanumeric characters and the character &quot;_&quot;.</p><p>Starting a variable with &quot;tab_&quot; is reserved for tabs and should not be used in regular states.</p></div>`,16),l=[n];function r(p,c,i,d,g,h){return t(),a("div",null,l)}const u=s(o,[["render",r]]);export{F as __pageData,u as default};

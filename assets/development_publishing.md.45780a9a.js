import{_ as s,c as a,o as n,a as e}from"./app.beee932d.js";const C=JSON.parse('{"title":"Pubishing","description":"","frontmatter":{},"headers":[],"relativePath":"development/publishing.md"}'),p={name:"development/publishing.md"},l=e(`<h1 id="pubishing" tabindex="-1">Pubishing <a class="header-anchor" href="#pubishing" aria-hidden="true">#</a></h1><h2 id="setup-to-publish-in-npm" tabindex="-1">Setup to publish in NPM <a class="header-anchor" href="#setup-to-publish-in-npm" aria-hidden="true">#</a></h2><p>In command line:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm adduser</span></span>
<span class="line"></span></code></pre></div><h2 id="publish-in-npm" tabindex="-1">Publish in NPM <a class="header-anchor" href="#publish-in-npm" aria-hidden="true">#</a></h2><p>In command line:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm version x.y.z</span></span>
<span class="line"><span style="color:#A6ACCD;">npm version </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">major </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> minor </span><span style="color:#89DDFF;">|</span><span style="color:#A6ACCD;"> patch</span><span style="color:#89DDFF;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">npm version x.y.z --no-git-tag-version </span><span style="color:#676E95;"># use this if release is created in github first</span></span>
<span class="line"></span></code></pre></div><p>For example, to release a patch version:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm version patch -m </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(dev): tag %s</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#A6ACCD;">npm publish --access public</span></span>
<span class="line"></span></code></pre></div><p>These commands will create a tag in git, so push to repo after them.</p><p>Also, create a release in the repo after all.</p><h2 id="deprecate-package" tabindex="-1">Deprecate package <a class="header-anchor" href="#deprecate-package" aria-hidden="true">#</a></h2><p>In command line:</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">npm deprecate </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">package-name</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">@</span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">version</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">&lt;message&gt;</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div>`,14),o=[l];function t(c,i,r,d,h,u){return n(),a("div",null,o)}const y=s(p,[["render",t]]);export{C as __pageData,y as default};
